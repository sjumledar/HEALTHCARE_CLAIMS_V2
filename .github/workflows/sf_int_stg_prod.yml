name: SNOWFLAKE INT/STG/PROD

on:
  push:
    tags:
      - 'db-int-sf*'
      - 'db-stg-sf*'
      - 'db-prod-sf*'

env:
  TENANT_ID: ${{ secrets.SERVICE_PRINCIPAL_LZ_TENANT_ID }} 
  SF_ACCOUNT: ${{ secrets.US_SF_ACCOUNT }}
  SF_DATABASE: ${{ vars.US_SF_DATABASE }}

jobs:
  deploy-snowflake-changes-job:
    runs-on: [self-hosted, linux, container-app-job]

    steps:
      - name: Checkout Repository Content
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
      
      - name: Install Python Packages
        run: |
          python3.9 -m pip install --upgrade pip
          pip install schemachange

      - name: Extract SF Credentials from AKV for INT
        if: ${{ contains(github.event.ref, 'int') }}
        env: 
            KV: "acssause2intkv01"
            CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_ID_INT }} 
            CLIENT_PWD: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_PWD_INT }}
        run: |
            az login --service-principal -u $CLIENT_ID -p $CLIENT_PWD --tenant $TENANT_ID
            touch .env
            az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-private-key --query value -o tsv >> .env    
            SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-key-password --query value -o tsv)
            echo "::add-mask::$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE"
            echo SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE >> $GITHUB_ENV            
            echo "SNOWFLAKE_USER=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-user-id --query value -o tsv)" >> $GITHUB_ENV

      - name: Run schemachange for INT
        if: ${{ contains(github.event.ref, 'int') }}
        env:
          SF_ROLE: ${{ vars.US_SF_ROLE_INT }}
          SF_WAREHOUSE: ${{ vars.US_SF_WAREHOUSE_INT }}
          SNOWFLAKE_PRIVATE_KEY_PATH: ".env"
          CHG_HIST_TBL: 'SA_SHARED_DATA.INT.TBL_GIT_CHANGE_HISTORY'
          PARAM: '{"schema":"INT"}'

        run: |      
          export PATH=$PATH:/home/github/.local/bin
          schemachange -f $GITHUB_WORKSPACE/Database/Snowflake -a $SF_ACCOUNT -u $SNOWFLAKE_USER -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $CHG_HIST_TBL --create-change-history-table --vars $PARAM
          rm .env

      - name: Extract SF Credentials from AKV for STG
        if: ${{ contains(github.event.ref, 'stg') }}
        env: 
            KV: "acssause2stganalyticskv"
            CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_ID_STG }} 
            CLIENT_PWD: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_PWD_STG }}
        run: |
            run: |
            az login --service-principal -u $CLIENT_ID -p $CLIENT_PWD --tenant $TENANT_ID
            touch .env
            az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-private-key --query value -o tsv >> .env    
            SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-key-password --query value -o tsv)
            echo "::add-mask::$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE"
            echo SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE >> $GITHUB_ENV            
            echo "SNOWFLAKE_USER=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-user-id --query value -o tsv)" >> $GITHUB_ENV
      
      - name: Run schemachange for STG
        if: ${{ contains(github.event.ref, 'stg') }}
        env:
          SF_ROLE: ${{ vars.US_SF_ROLE_STG }}
          SF_WAREHOUSE: ${{ vars.US_SF_WAREHOUSE_STG }}
          SNOWFLAKE_PRIVATE_KEY_PATH: ".env"
          CHG_HIST_TBL: 'SA_SHARED_DATA.STG.TBL_GIT_CHANGE_HISTORY'
          PARAM: '{"schema":"STG"}'

        run: |      
          export PATH=$PATH:/home/github/.local/bin
          schemachange -f $GITHUB_WORKSPACE/Database/Snowflake -a $SF_ACCOUNT -u $SNOWFLAKE_USER -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $CHG_HIST_TBL --create-change-history-table --vars $PARAM
          rm .env

      - name: Extract SF Credentials from AKV for PROD
        if: ${{ contains(github.event.ref, 'prod') }}
        env: 
            KV: "acssause2prodanalyticskv"
            CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_ID_PROD }} 
            CLIENT_PWD: ${{ secrets.SERVICE_PRINCIPAL_LZ_CLIENT_PWD_PROD }}
        run: |
            az login --service-principal -u $CLIENT_ID -p $CLIENT_PWD --tenant $TENANT_ID
            touch .env
            az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-private-key --query value -o tsv >> .env    
            SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-rsa-key-password --query value -o tsv)
            echo "::add-mask::$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE"
            echo SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=$SNOWFLAKE_PRIVATE_KEY_PASSPHRASE >> $GITHUB_ENV            
            echo "SNOWFLAKE_USER=$(az keyvault secret show --vault-name $KV --name snow-sa-gh-runner-user-id --query value -o tsv)" >> $GITHUB_ENV
            
      - name: Run schemachange for PROD
        if: ${{ contains(github.event.ref, 'prod') }}
        env:
          SF_ROLE: ${{ vars.US_SF_ROLE_PROD }}
          SF_WAREHOUSE: ${{ vars.US_SF_WAREHOUSE_PROD }}
          SNOWFLAKE_PRIVATE_KEY_PATH: ".env"
          CHG_HIST_TBL: 'SA_SHARED_DATA.PROD.TBL_GIT_CHANGE_HISTORY'
          PARAM: '{"schema":"PROD"}'

        run: |      
          export PATH=$PATH:/home/github/.local/bin
          schemachange -f $GITHUB_WORKSPACE/Database/Snowflake -a $SF_ACCOUNT -u $SNOWFLAKE_USER -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $CHG_HIST_TBL --create-change-history-table --vars $PARAM
          rm .env
